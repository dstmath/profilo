load("//buck_imports:profilo_path.bzl", "profilo_path")
load("//build_defs:fb_xplat_cxx_library.bzl", "fb_xplat_cxx_library")
load(":build_defs.bzl", "museum_tracer_library", "unwindc_tracer_library")

museum_tracer_library(version = "6.0.1")

museum_tracer_library(version = "7.0.0")

unwindc_tracer_library("6.0.0")

unwindc_tracer_library("7.0.0")

unwindc_tracer_library("7.1.0")

unwindc_tracer_library("7.1.1")

unwindc_tracer_library("7.1.2")

PROFILER_EXPORTED_HEADERS = [
    "DalvikTracer.h",
    "SamplingProfiler.h",
]

fb_xplat_cxx_library(
    name = "constants",
    header_namespace = "profiler",
    exported_headers = [
        "Constants.h",
    ],
    visibility = [
        profilo_path("cpp/writer/..."),
    ],
)

fb_xplat_cxx_library(
    name = "artcompat",
    srcs = [
        "ArtCompatibility.cpp",
        "ArtCompatibilityRunner.cpp",
    ],
    headers = [
        "ArtCompatibility.h",
        "ArtCompatibilityRunner.h",
    ],
    header_namespace = "profiler",
    exported_headers = [
        "ArtCompatibility.h",
    ],
    allow_jni_merging = True,
    compiler_flags = [
        "-fvisibility=hidden",
        "-fexceptions",
        "-std=gnu++14",
        "-DLOG_TAG=\"Profilo/ArtCompatibility\"",
        #"-DFBLOG_NDEBUG=0",  # verbose logging
    ],
    force_static = True,
    soname = "libprofilo_stacktrace_artcompat.so",
    deps = [
        ":base_tracer",
        ":museum-tracer-6.0.1",
        ":museum-tracer-7.0.0",
        ":unwindc-tracer-6.0.0",
        ":unwindc-tracer-7.0.0",
        ":unwindc-tracer-7.1.0",
        ":unwindc-tracer-7.1.1",
        ":unwindc-tracer-7.1.2",
        profilo_path("deps/fb:fb"),
        profilo_path("deps/fbjni:fbjni"),
        profilo_path("deps/forkjail:forkjail"),
        profilo_path("cpp/logger:logger"),
    ],
)

fb_xplat_cxx_library(
    name = "base_tracer",
    header_namespace = "profiler",
    exported_headers = [
        "BaseTracer.h",
    ],
    visibility = [
        profilo_path("..."),
    ],
)

fb_xplat_cxx_library(
    name = "profiler",
    srcs = [
        "DalvikTracer.cpp",
        "SamplingProfiler.cpp",
        "jni.cpp",
    ],
    headers = glob(
        ["*.h"],
        exclude = PROFILER_EXPORTED_HEADERS,
    ),
    header_namespace = "profiler",
    exported_headers = PROFILER_EXPORTED_HEADERS,
    allow_jni_merging = True,
    compiler_flags = [
        "-fvisibility=hidden",
        "-fexceptions",
        "-DLOG_TAG=\"Profilo/Profiler\"",
        "-Wno-format-security",
        "-Wno-unknown-attributes",
        #'-DFBLOG_NDEBUG=0', # verbose logging
        "-std=gnu++14",
    ],
    soname = "libprofilo_stacktrace.$(ext)",
    supported_platforms_regex = "^android-(armv7|x86)$",
    visibility = [
        "PUBLIC",
    ],
    deps = [
        ":artcompat",
        ":base_tracer",
        ":constants",
        ":museum-tracer-6.0.1",
        ":museum-tracer-7.0.0",
        ":unwindc-tracer-6.0.0",
        ":unwindc-tracer-7.0.0",
        ":unwindc-tracer-7.1.0",
        ":unwindc-tracer-7.1.1",
        ":unwindc-tracer-7.1.2",
        profilo_path("cpp:constants"),
        profilo_path("cpp:profilo"),
        profilo_path("cpp:providers"),
        profilo_path("cpp/logger:logger"),
        profilo_path("cpp/sigmuxsetup:sigmuxsetup"),
        profilo_path("cpp/util:util"),
        profilo_path("deps/dalvik:dalvik-subset"),
        profilo_path("deps/fb:fb"),
        profilo_path("deps/fbjni:fbjni"),
        profilo_path("deps/museum:museum"),
        profilo_path("deps/sigmux:sigmux"),
    ],
)
