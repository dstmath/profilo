// -*- C++ -*-
//===------------------------------ chrono ---------------------------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef _MUSEUM_LIBCPP_EXPERIMENTAL_CHRONO
#define _MUSEUM_LIBCPP_EXPERIMENTAL_CHRONO

/**
    experimental/chrono synopsis

// C++1y

#include <museum/8.1.0/external/libcxx/experimental/chrono>

namespace std {
namespace chrono {
namespace experimental {
inline namespace fundamentals_v1 {

  // See C++14 20.12.4, customization traits
  template <class Rep> constexpr bool treat_as_floating_point_v
    = treat_as_floating_point<Rep>::value;

} // namespace fundamentals_v1
} // namespace experimental
} // namespace chrono
} // namespace std

 */

#include <museum/8.1.0/external/libcxx/experimental/__config>
#include <museum/8.1.0/external/libcxx/experimental/chrono>

#if !defined(_MUSEUM_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
#pragma GCC system_header
#endif

#if _MUSEUM_LIBCPP_STD_VER > 11

_MUSEUM_LIBCPP_BEGIN_NAMESPACE_CHRONO_LFTS

#ifndef _MUSEUM_LIBCPP_HAS_NO_VARIABLE_TEMPLATES

template <class _Rep> _MUSEUM_LIBCPP_CONSTEXPR bool treat_as_floating_point_v
    = treat_as_floating_point<_Rep>::value;

#endif /* _MUSEUM_LIBCPP_HAS_NO_VARIABLE_TEMPLATES */

_MUSEUM_LIBCPP_END_NAMESPACE_CHRONO_LFTS

#endif /* _MUSEUM_LIBCPP_STD_VER > 11 */

#endif /* _MUSEUM_LIBCPP_EXPERIMENTAL_CHRONO */
